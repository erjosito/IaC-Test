{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "defaultValue": null,
            "type": "string",
            "metadata": { "description": "Default username for VMs and NVAs" }
		},
        "adminPassword": {
            "defaultValue": null,
            "type": "securestring",
            "metadata": { "description": "Default password for VMs and NVAs" }
		},
        "vmName": {
            "defaultValue": "myvm",
            "type": "string",
            "metadata": { "description": "Name for the VMs or the VMSS" }
        },
        "vmType": {
            "defaultValue": "ubuntu",
            "type": "string",
            "allowedValues": [ "ubuntu","ubuntuScaleSet" ],
            "metadata": { "description": "Choose ubuntuScaleSet to deploy ubuntu in a scale set" }
        },
		"deployLBYesNo": {
			"defaultValue": "yes",
			"type": "string",
            "allowedValues": [ "yes","no" ]
		},
		"pipYesNo": {
			"defaultValue": "yes",
			"type": "string",
            "allowedValues": [ "yes","no" ]
		},
		"azYesNo": {
			"defaultValue": "yes",
			"type": "string",
            "allowedValues": [ "yes","no" ]
		},
        "lbSku": {
            "defaultValue": "basic",
            "type": "string",
            "allowedValues": [ "basic","standard" ],
            "metadata": { "description": "Whether Load Balancers should be Basic or Standard (preview)" }
        },
        "lbType": {
            "defaultValue": "external",
            "type": "string",
            "allowedValues": [ "internal", "external", "both" ],
            "metadata": { "description": "Whether Load Balancers should be Basic or Standard (preview)" }
        },
        "repoBranch": {
            "defaultValue": "master",
            "type": "string",
            "metadata": { "description": "Branch out of the Github repo where the nested templates will be downloaded from" }
        }
    },
    "variables": {
        "deploymentApiVersion": "2017-08-01",
        "networkApiVersion": "2017-09-01",
        "storageApiVersion": "2016-01-01",
        "baseRepoURL": "[concat('https://raw.githubusercontent.com/erjosito/IaC-Test/', parameters('repoBranch'), '/')]",
        "storageAccountName": "[concat('storage', uniqueString(resourceGroup().id))]",
        "vnetName": "myVnet",
        "vnetOctets12": "10.1.",
        "subnetName": "subnet1",
        "subnetOctet": "1",
        "vnetSpace": "[concat(variables('vnetOctets12'), '0.0/16')]",
        "subnetPrefix": "[concat(variables('vnetOctets12'), variables('subnetOctet'),'.0/24')]",
        "ipPrefix": "[concat(variables('vnetOctets12'), variables('subnetOctet'))]",
        "vipSuffix": "100",
        "customScript": "ubuntu_vm_config.sh",
        "customScriptUri": "[concat(variables('baseRepoURL'), variables('customScript'))]",
        "customScriptCmd": "[concat('chmod 666 ', variables('customScript'), ' && /bin/sh ./', variables('customScript'))]",
        "vmParamsHash": {
            "ubuntu": { 
                "baseRepoURL": { "value": "[variables('baseRepoURL')]" },
                "vmType": { "value": "[parameters('vmType')]" },
                "vmCount": { "value": 2 },
                "vmName": { "value": "[parameters('vmName')]" },
                "vnetName": { "value": "[variables('vnetName')]" },
                "storageAccountName": { "value": "[variables('storageAccountName')]" },
                "subnet0Name": { "value": "[variables('subnetName')]" },
                "vmUsr": { "value": "[parameters('adminUsername')]" },
                "vmPwd": { "value": "[parameters('adminPassword')]" },
                "deployLBYesNo": { "value": "[parameters('deployLBYesNo')]" },
                "ipPrefix": { "value": "[variables('ipPrefix')]" },
                "vipSuffix": { "value": "[variables('vipSuffix')]" },
                "pipYesNo": { "value": "[parameters('pipYesNo')]" },
                "azYesNo": { "value": "[parameters('azYesNo')]" },
                "lbSku": { "value": "[parameters('lbSku')]" },
                "lbType": { "value": "[parameters('lbType')]" },
                "scriptUri": { "value": "[variables('customScriptUri')]" },
                "scriptCmd": { "value": "[variables('customScriptCmd')]" }
            },
            "ubuntuScaleSet": {
                "baseRepoURL": { "value": "[variables('baseRepoURL')]" },
                "vmType": { "value": "[parameters('vmType')]" },
                "vmCount": { "value": 2 },
                "vmName": { "value": "[parameters('vmName')]" },
                "vmssName": { "value": "[parameters('vmName')]" },
                "vnetName": { "value": "[variables('vnetName')]" },
                "subnet0Name": { "value": "[variables('subnetName')]" },
                "vmUsr": { "value": "[parameters('adminUsername')]" },
                "vmPwd": { "value": "[parameters('adminPassword')]" },
                "deployLBYesNo": { "value": "[parameters('deployLBYesNo')]" },
                "lbSku": { "value": "[parameters('lbSku')]" },
                "lbType": { "value": "[parameters('lbType')]" },
                "ipPrefix": { "value": "[variables('ipPrefix')]" },
                "vipSuffix": { "value": "[variables('vipSuffix')]" },
                "pipYesNo": { "value": "[parameters('pipYesNo')]" },
                "azYesNo": { "value": "[parameters('azYesNo')]" },
                "scriptUri": { "value": "[variables('customScriptUri')]" },
                "scriptCmd": { "value": "[variables('customScriptCmd')]" },
                "capacityMax": { "value": 4 },
                "capacityMin": { "value": 1 },
                "capacityDef": { "value": 1 },
                "cpuMax": { "value": 60 },
                "cpuMin": { "value": 30 }
            }
        },
        "vmParams": "[variables('vmParamsHash')[parameters('vmType')]]",
        "vmTemplateUri": {
            "ubuntu": "[concat(variables('baseRepoURL'), 'vmLinux_1nic_noVnet.json')]",
            "ubuntuScaleSet": "[concat(variables('baseRepoURL'), 'vmssLinux_1nic_noVnet.json')]"
        }
    },
    "resources": [
        {
			"comments": "Storage account for VM disks",
			"type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {},
            "resources": [],
            "dependsOn": []
        },
        {
            "comments": "Create Vnet with three subnets and one gateway subnet",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('vnetName')]",
            "apiVersion": "[variables('networkApiVersion')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetSpace')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            },
            "resources": [],
            "dependsOn": []
        },
		{
			"comments": "Create VMs",
            "name": "VMs",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "[variables('deploymentApiVersion')]",
			"properties": {
				"mode": "Incremental",
				"templateLink": {
					"uri": "[variables('vmTemplateUri')[parameters('vmType')]]",
					"contentVersion": "1.0.0.0"
				},
				"parameters":  "[variables('vmParams')]"
			},
            "dependsOn": [
                "[variables('vnetName')]", "[variables('storageAccountName')]"
            ]
		}
    ]
}